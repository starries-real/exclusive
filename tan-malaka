PREFIX, OWNER = "/", "`w[`bTann18`w] "
PRIMARY_COLOR, SECONDARY_COLOR = "w", "c"
DROP_LOG_TABLE, TAKE_LOG_TABLE, SPIN_LOG_TABLE = {}, {}, {}

function SHOW_DIALOG(D, S) SendVariantList({[0] = "OnDialogRequest", [1] = D}, -1, S) end
function SPLIT(STR, SUB) local T = {} for STR in string.gmatch(STR, "([^"..SUB.."]+)") do table.insert(T, STR) end return T end
function GET_ITEM_AMOUNT(I) for _, C in pairs(GetInventory()) do if C.id == I then return math.floor(C.amount) end end return 0 end
function MERGE_BLACK() SendPacket(2,"action|dialog_return\ndialog_name|info_box\nbuttonClicked|make_bgl") end
function SHATTER_BLACK() SendPacket(2,"action|dialog_return\ndialog_name|info_box\nbuttonClicked|make_bluegl") end
function WEAR(I) local P = {} P.type = 10 P.value = I SendPacketRaw(false, P) end 
function GET_NAME(I) for _, P in pairs(GetPlayerList()) do if P.netid == I then return P.name end end return "" end 

function LOGB(I, S) SendVariantList({[0] = "OnTalkBubble", [1] = I ,[2] = OWNER..""..S}) end
function LOGL(S) SendVariantList({[0] = "OnTextOverlay", [1] = OWNER..""..S}) end
function LOGC(S) SendVariantList({[0] = "OnConsoleMessage", [1] = OWNER..""..S}) end
function LOGT(S) SendPacket(2, "action|input\n|text|" ..S) end 
function GET_DATA(N) tonumber(N) local W, D, B, I, DATA = N % 100, math.floor(N / 100) % 100, math.floor(N / 10000) % 100, math.floor(N / 1000000) % 100, "`w" if I == 0 and B == 0 and D == 0 and W == 0 then return "-" end if I ~= 0 then if B ~= 0 or D ~= 0 or W ~= 0 then DATA = DATA ..I.. " `bBlack Gem Lock `w" else DATA = DATA ..I.. " `bBlack Gem Lock" end end if B ~= 0 then if D ~= 0 or W ~= 0 then DATA = DATA ..B.. " `eBlue Gem Lock `w" else DATA = DATA ..B.. " `eBlue Gem Lock" end end if D ~= 0 then if W ~= 0 then DATA = DATA ..D.. " `1Diamond Lock `w" else DATA = DATA ..D.. " `1Diamond Lock" end end if W ~= 0 then DATA = DATA ..W.. " `9World Lock" end return DATA end
function DIALOG_DROP_LOG() A = {} for _, T in pairs(DROP_LOG_TABLE) do table.insert(A, T.DROP) end SendVariantList({[0] = "OnDialogRequest", [1] = "set_default_color|`"..PRIMARY_COLOR.."|\nadd_label_with_icon|big|Dropped Log|left|13810|\nadd_spacer|small|\n"..table.concat(A).."\nadd_spacer|small|\nadd_quick_exit|||\nend_dialog|DROP_LOG|Close||"}) end
function DIALOG_TAKE_LOG() A = {} for _, T in pairs(TAKE_LOG_TABLE) do table.insert(A, T.TAKE) end SendVariantList({[0] = "OnDialogRequest", [1] = "set_default_color|`"..PRIMARY_COLOR.."|\nadd_label_with_icon|big|Collected Log|left|13808|\nadd_spacer|small|\n"..table.concat(A).."\nadd_spacer|small|\nadd_quick_exit|||\nend_dialog|TAKE_LOG|Close||"}) end
function DIALOG_SPIN_LOG() A = {} for _, T in pairs(SPIN_LOG_TABLE) do table.insert(A, T.SPIN) end SendVariantList({[0] = "OnDialogRequest", [1] = "set_default_color|`"..PRIMARY_COLOR.."|\nadd_label_with_icon|big|Collected Log|left|758|\nadd_spacer|small|\n"..table.concat(A).."\nadd_spacer|small|\nadd_quick_exit|||\nend_dialog|TAKE_LOG|Close||"}) end

function QEME_COUNT(N) if N == 0 then r = "1" elseif N >= 10 then r = string.sub(N, -1) else r = N end return r end
function REME_COUNT(N) if N == 19 or N == 28 or N == 0 then r = 0 else a = math.floor(N / 10) b = N % 10 r = string.sub(tostring(a + b), -1) end return r end
function SHOW_GAME(N) if REME_MODE and not QEME_MODE then return "`5[`9REME : `w"..REME_COUNT(tonumber(N)).."`5]" elseif not REME_MODE and QEME_MODE then return "`5[`8QEME : `w"..QEME_COUNT(tonumber(N)).."`5]" elseif REME_MODE and QEME_MODE then return "`5[`9REME : `w"..REME_COUNT(tonumber(N)).." `5I `8QEME : `w"..QEME_COUNT(tonumber(N)).."`5]" else return "" end end

function DROP(I, A) SendPacket(2,"action|dialog_return\ndialog_name|drop\nitem_drop|"..I.. "|\nitem_count|"..A) end
function DEPO(A) SendPacket(2, "action|dialog_return\ndialog_name|bank_deposit\nbgl_count|" .. A) end
function WEDE(A) SendPacket(2, "action|dialog_return\ndialog_name|bank_withdraw\nbgl_count|" .. A) end

function CUSTOM_DROP(F) RESULT = GET_DATA(F)
WORLD_LOCK = F % 100 DIAMOND_LOCK = math.floor((F % 10000) / 100) BLUE_GEM_LOCK = math.floor((F % 1000000) / 10000) BLACK_GEM_LOCK = math.floor(F / 1000000)
RunThread(function() while CDROP do if SHOW_COLLECTED then break end
Sleep(200)
if BLACK_GEM_LOCK > 0 then if GET_ITEM_AMOUNT(11550) < math.floor(BLACK_GEM_LOCK) and GET_ITEM_AMOUNT(7188) > math.floor(BLACK_GEM_LOCK)*100 then MERGE_BLACK() Sleep(100) end
DROP(11550, BLACK_GEM_LOCK) Sleep(100) table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..BLACK_GEM_LOCK.." `bBlack Gem Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID})
end
if BLUE_GEM_LOCK > 0 then if GET_ITEM_AMOUNT(7188) < math.floor(BLUE_GEM_LOCK) then SHATTER_BLACK() Sleep(100) end
DROP(7188, BLUE_GEM_LOCK) Sleep(100) table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..BLUE_GEM_LOCK.." `eBlue Gem Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID})
end
if DIAMOND_LOCK > 0 then if GET_ITEM_AMOUNT(1796) < math.floor(DIAMOND_LOCK) then WEAR(7188) Sleep(100) end
DROP(1796, DIAMOND_LOCK) Sleep(100) table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..DIAMOND_LOCK.." `1Diamond Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID})
end
if WORLD_LOCK > 0 then if GET_ITEM_AMOUNT(242) < math.floor(WORLD_LOCK) then WEAR(1796) Sleep(100) end
DROP(242, WORLD_LOCK) Sleep(100) table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..WORLD_LOCK.." `9World Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID})
end LOGT(OWNER.."Dropping "..RESULT) LOGC("Dropping "..RESULT) if CDROP then CDROP = false end
if not CDROP then break end end end)
end

function DIALOG_MENU() S = [[
set_default_color|`]]..PRIMARY_COLOR..[[|
add_label_with_icon|big|Tan Malaka's Proxy|left|7188|
add_spacer|small|
add_textbox|Main Commands|
add_spacer|small|
add_smalltext|`2Commands :|left|
add_label_with_icon|small|]]..PREFIX..[[menu or ]]..PREFIX..[[proxy : Open main menu of the proxy|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[ireng : Change your skin to be `bpitch black|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[w [world] : Moving to target world quickly|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[g : Shortcut to be a ghooosttt|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[modfly : Toggle to enable or disable the ModFly|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[res : Respawn yourself|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[relog : Relogging to current world|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[modal : Show your balance or modal|left|]]..GetItemInfo("One-Way Block").id..[[|
add_spacer|small|
add_textbox|Logs Commands|
add_spacer|small|
add_smalltext|`2Commands :|left|
add_label_with_icon|small|]]..PREFIX..[[log drop : Open drop log menu|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[log take : Open take log menu|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[log spin : Open spin log menu|left|]]..GetItemInfo("One-Way Block").id..[[|
add_spacer|small|
add_textbox|Wrench Commands|
add_spacer|small|
add_smalltext|`2Commands :|left|
add_label_with_icon|small|]]..PREFIX..[[wpl : Turn on the wrench pull mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[wk : Turn on the wrench kick mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[wb : Turn on the wrench ban mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[mpull : Turn on the wrench pull bubble|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[woff : Turn off the wrench mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_spacer|small|
add_textbox|Spam Commands|
add_spacer|small|
add_smalltext|`2Commands :|left|
add_label_with_icon|small|]]..PREFIX..[[set <text> : Set the spamming text|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[spam : Toggle the spamming mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_spacer|small|
add_textbox|Hoster Commands|
add_spacer|small|
add_smalltext|`2Commands :|left|
add_label_with_icon|small|]]..PREFIX..[[taunt : Taunt your oppenent|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[reme : Toggle reme mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[qeme : Toggle qeme mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[cbgl : Turn on the change bgl mode|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[cd <amount> : Dropping lock with world lock format|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[dd <amount> : Dropping lock with diamond lock format|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[dbb <amount> : Dropping lock with blue gem lock format|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[dbl <amount> : Dropping lock with black gem lock format|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[mkb : Merge the 100 Blue Gem Lock into Black Gem Lock|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[bkb : Shatter the 1 Black Gem Lock into 100 Blue Gem Lock|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[dp <amount> : Deposit your Blue Gem Lock|left|]]..GetItemInfo("One-Way Block").id..[[|
add_label_with_icon|small|]]..PREFIX..[[wd <amount> : Withdraw your Blue Gem Lock|left|]]..GetItemInfo("One-Way Block").id..[[|
add_quick_exit|
add_spacer|small|
end_dialog|MAIN_MENU|Close ||]] SHOW_DIALOG(S, 500)
end

-- DIALOG_MENU()

AddHook("OnSendPacket", "PACKET-MAIN", function(T, S) if S == nil then return end local VALUE, BUTTON, TOGGLE = SPLIT(S:gsub("action|input\n|text|", ""), " "), S:match("buttonClicked|(%S+)"), S if VALUE == nil or VALUE[1] == nil or VALUE == "" or VALUE[1] == "" then return end COMMAND = VALUE[1]:lower()
if COMMAND == PREFIX.."proxy" or COMMAND == PREFIX.."menu" then DIALOG_MENU() return true end
if COMMAND == PREFIX.."ireng" then SendPacket(2,"action|dialog_return\ndialog_name|skinpicker\nred|0\ngreen|0\nblue|0\ntransparency|0") LOGT("Mode `bHytam (lol)") return true end
if COMMAND == PREFIX.."w" and VALUE[2] then local NAME_WORLD = VALUE[2]:upper() LOGL("Warping to "..NAME_WORLD) SendPacket(3,"action|join_request\nname|"..NAME_WORLD.."\ninvitedWorld|0") return true elseif COMMAND == PREFIX.."w" and not VALUE[2] then LOGC("Provide the exact target world! Type : /w <world>") return true end
if COMMAND == PREFIX.."g" then LOGT("/ghost") LOGB(GetLocal().netID, "Wooshhh (ghost)") return true end
if COMMAND == PREFIX.."modfly" then if MOD_FLY_STATUS == nil or MOD_FLY_STATUS == false then MOD_FLY_STATUS = true ChangeValue("[C] Modfly", true) LOGC("Mod Fly `2Enabled") else MOD_FLY_STATUS = false ChangeValue("[C] Modfly", false) LOGC("Mod Fly `4Disabled") end return true end
if COMMAND == PREFIX.."res" then SendPacket(2, "action|respawn") LOGL("Respawning") return true end
if COMMAND == PREFIX.."relog" then local LATEST_WORLD = GetWorld().name SendPacket(3, "action|join_request\nname|" .. LATEST_WORLD .. "\ninvitedWorld|0") return true end
if COMMAND == PREFIX.."modal" or COMMAND == PREFIX.."balance" then RES = (GET_ITEM_AMOUNT(242))+(GET_ITEM_AMOUNT(1796)*100)+(GET_ITEM_AMOUNT(7188)*10000)+(GET_ITEM_AMOUNT(11550)*1000000) LOGC("Your balance : "..GET_DATA(RES)) LOGT("Your balance : "..GET_DATA(RES)) return true end

if COMMAND == PREFIX.."log" and VALUE[2] then local ARGS = VALUE[2]:lower() if ARGS == "drop" then DIALOG_DROP_LOG() elseif ARGS == "take" then DIALOG_TAKE_LOG() elseif ARGS == "spin" then DIALOG_SPIN_LOG() else LOGC("Log Commands that available are 'drop', 'take', and 'spin'") end return true elseif COMMAND == PREFIX.."log" and not VALUE[2] then LOGC("Log Commands that available are 'drop', 'take', and 'spin'") return true end

if COMMAND == PREFIX.."wl" and tonumber(VALUE[2]) then local DROP_LOCK = tonumber(VALUE[2]) if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true elseif tonumber(VALUE[2]) > GET_ITEM_AMOUNT(242) then LOGC("You don't have enough that item!") else DROP(242, VALUE[2]) LOGC("Dropping `w" .. VALUE[2] .. " `9World Lock") LOGT(OWNER.."Dropping `w" .. VALUE[2] .. " `9World Lock") table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..DROP_LOCK.." `9World Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID}) end return true end
if COMMAND == PREFIX.."dl" and tonumber(VALUE[2]) then local DROP_LOCK = tonumber(VALUE[2]) if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true elseif tonumber(VALUE[2]) > GET_ITEM_AMOUNT(1796) then LOGC("You don't have enough that item!") else DROP(1796, VALUE[2]) LOGC("Dropping `w" .. VALUE[2] .. " `1Diamond Lock") LOGT(OWNER.."Dropping `w" .. VALUE[2] .. " `1Diamond Lock") table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..DROP_LOCK.." `1Diamond Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID}) end return true end
if COMMAND == PREFIX.."bl" and tonumber(VALUE[2]) then local DROP_LOCK = tonumber(VALUE[2]) if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true elseif tonumber(VALUE[2]) > GET_ITEM_AMOUNT(7188) then LOGC("You don't have enough that item!") else DROP(7188, VALUE[2]) LOGC("Dropping `w" .. VALUE[2] .. " `eBlue Gem Lock") LOGT(OWNER.."Dropping `w" .. VALUE[2] .. " `eBlue Gem Lock") table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..DROP_LOCK.." `eBlue Gem Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID}) end return true end
if COMMAND == PREFIX.."bg" and tonumber(VALUE[2]) then local DROP_LOCK = tonumber(VALUE[2]) if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true elseif tonumber(VALUE[2]) > GET_ITEM_AMOUNT(11550) then LOGC("You don't have enough that item!") else DROP(11550, VALUE[2]) LOGC("Dropping `w" .. VALUE[2] .. " `bBlack Gem Lock") LOGT(OWNER.."Dropping `w" .. VALUE[2] .. " `bBlack Gem Lock") table.insert(DROP_LOG_TABLE, {DROP = "\nadd_label_with_icon|small|"..GetLocal().name.." `oDropped `w"..DROP_LOCK.." `bBlack Gem Lock `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Wow Block").id.."|\n", NET_ID = GetLocal().netID}) end return true end
return false end)

AddHook("OnSendPacket", "PACKET-SPAM", function(T, S) if S == nil then return end local VALUE, BUTTON, TOGGLE = SPLIT(S:gsub("action|input\n|text|", ""), " "), S:match("buttonClicked|(%S+)"), S if VALUE == nil or VALUE[1] == nil or VALUE == "" or VALUE[1] == "" then return end COMMAND = VALUE[1]:lower() if COMMAND == PREFIX.."set" and VALUE[2] then SPAMMING_TEXT = S:match("/set (.+)") LOGC("Spamming set to : "..SPAMMING_TEXT) return true elseif COMMAND == PREFIX.."set" and not VALUE[2] then LOGC("Provide the spam text! Type : /set <text>") return true end if COMMAND == PREFIX.."spam" then if SPAMMING_TEXT == nil or SPAMMING_TEXT == "" or SPAMMING_TEXT == " " then LOGC("Provide spamming text first! Type : /set <text>") return true end if SPAM_MODE == nil or SPAM_MODE == false then DODGE_SPAM = true SPAM_MODE = true RunThread(function() SendPacket(2, "action|dialog_return\ndialog_name|cheats\ncheck_autospam|1") Sleep(600) LOGT("/setspam "..SPAMMING_TEXT) end) LOGC("Spam Mode `2Enabled") else SPAM_MODE = false SendPacket(2, "action|dialog_return\ndialog_name|cheats\ncheck_autospam|0") LOGC("Spam Mode `4Disabled") end return true end return false end)
AddHook("OnVariant", "VARIANT-SPAM", function(V) if V[0] == "OnDialogRequest" and DODGE_SPAM then DODGE_SPAM = false return true end return false end)

function HOOK_WRENCH(V)
    if V[0] == "OnDialogRequest" and V[1]:find("add_button|pull|`5Pull``|0|0|") then
        W = V[1]
        X = tonumber(W:match("embed_data|netID|(%d+)")) PULLED_NAME = GET_NAME(X)
        SendPacket(2, "action|dialog_return\ndialog_name|popup\nnetID|" .. X .. "|\nbuttonClicked|pull")
        LOGL("Pulling "..PULLED_NAME) if PULL_BUBBLE_MODE then CHAT("Gas "..PULLED_NAME.." ?") end
        return true
    end
end

AddHook("OnSendPacket", "PACKET-WRENCH", function(T, S) if S == nil then return end local VALUE, BUTTON, TOGGLE = SPLIT(S:gsub("action|input\n|text|", ""), " "), S:match("buttonClicked|(%S+)"), S if VALUE == nil or VALUE[1] == nil or VALUE == "" or VALUE[1] == "" then return end COMMAND = VALUE[1]:lower()
if COMMAND == PREFIX.."wpl" then if WRENCH_MODE ~= "PULL" then WRENCH_MODE = "PULL" WRENCH_STATUS = true AddHook("OnVariant", "HOOK_WRENCH", HOOK_WRENCH) LOGC("Wrench Pull `2Enabled") else WRENCH_MODE = "" WRENCH_STATUS = false RemoveHook("HOOK_WRENCH") LOGC("Wrench Pull `4Disabled") end return true end
if COMMAND == PREFIX.."wk" then if WRENCH_MODE ~= "KICK" then WRENCH_MODE = "KICK" WRENCH_STATUS = true AddHook("OnVariant", "HOOK_WRENCH", HOOK_WRENCH) LOGC("Wrench Kick `2Enabled") else WRENCH_MODE = "" WRENCH_STATUS = false RemoveHook("HOOK_WRENCH") LOGC("Wrench Kick `4Disabled") end return true end
if COMMAND == PREFIX.."wb" then if WRENCH_MODE ~= "BAN" then WRENCH_MODE = "BAN" WRENCH_STATUS = true AddHook("OnVariant", "HOOK_WRENCH", HOOK_WRENCH) LOGC("Wrench Ban `2Enabled") else WRENCH_MODE = "" WRENCH_STATUS = false RemoveHook("HOOK_WRENCH") LOGC("Wrench Ban `4Disabled") end return true end
if COMMAND == PREFIX.."mpull" then if PULL_BUBBLE_MODE == nil or PULL_BUBBLE_MODE == false then PULL_BUBBLE_MODE = true LOGC("Wrench Pull Bubble `2Enabled") else PULL_BUBBLE_MODE = false LOGC("Wrench Pull Bubble `4Disabled") end return true end
if COMMAND == PREFIX.."woff" then if WRENCH_STATUS == nil or WRENCH_STATUS == false then WRENCH_STATUS = true LOGC("Fast Wrench `2Enabled") else WRENCH_STATUS = false RemoveHook("HOOK_WRENCH") LOGC("Fast Wrench `4Disabled") end return true end

return false end)

AddHook("OnSendPacket", "PACKET-HOSTER", function(T, S) if S == nil then return end local VALUE, BUTTON, TOGGLE = SPLIT(S:gsub("action|input\n|text|", ""), " "), S:match("buttonClicked|(%S+)"), S if VALUE == nil or VALUE[1] == nil or VALUE == "" or VALUE[1] == "" then return end COMMAND = VALUE[1]:lower()
if COMMAND == PREFIX.."taunt" then LOGT("Lembek Banget Si Bang `0(shy)") LOGL("Tazz Tazz Tazz") return true end
if COMMAND == PREFIX.."reme" then if REME_MODE == nil or REME_MODE == false then REME_MODE = true LOGC("Reme Mode `2Enabled") else REME_MODE = false LOGC("Reme Mode `4Disabled") end return true end
if COMMAND == PREFIX.."qeme" then if QEME_MODE == nil or QEME_MODE == false then QEME_MODE = true LOGC("Qeme Mode `2Enabled") else QEME_MODE = false LOGC("Qeme Mode `4Disabled") end return true end
if COMMAND == PREFIX.."cbgl" then if CHANGE_BGL_MODE == nil or CHANGE_BGL_MODE == false then CHANGE_BGL_MODE = true LOGC("Change BGL `2Enabled") else CHANGE_BGL_MODE = false LOGC("Change BGL `4Disabled") end return true end
if COMMAND == PREFIX.."cd" and VALUE[2] then if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true else local F = tonumber(VALUE[2]) if not CDROP then CDROP = true else CDROP = false end RunThread(CUSTOM_DROP(F)) end return true elseif COMMAND == PREFIX.."cd" and not VALUE[2] then LOGC("Make sure provide amount to drop by typing like this : /cd <amount>") return true end
if COMMAND == PREFIX.."dd" and VALUE[2] then if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true else local F = tonumber(VALUE[2]*100) if not CDROP then CDROP = true else CDROP = false end RunThread(CUSTOM_DROP(F)) end return true elseif COMMAND == PREFIX.."cd" and not VALUE[2] then LOGC("Make sure provide amount to drop by typing like this : /cd <amount>") return true end
if COMMAND == PREFIX.."dbb" and VALUE[2] then if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true else local F = tonumber(VALUE[2]*10000) if not CDROP then CDROP = true else CDROP = false end RunThread(CUSTOM_DROP(F)) end return true elseif COMMAND == PREFIX.."cd" and not VALUE[2] then LOGC("Make sure provide amount to drop by typing like this : /cd <amount>") return true end
if COMMAND == PREFIX.."dbl" and VALUE[2] then if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true else local F = tonumber(VALUE[2]*1000000) if not CDROP then CDROP = true else CDROP = false end RunThread(CUSTOM_DROP(F)) end return true elseif COMMAND == PREFIX.."cd" and not VALUE[2] then LOGC("Make sure provide amount to drop by typing like this : /cd <amount>") return true end
if COMMAND == PREFIX.."mkb" then if GET_ITEM_AMOUNT(7188) < 100 then LOGC("You don't have enough Blue Gem Lock!") return true else MERGE_BLACK() end return true end 
if COMMAND == PREFIX.."bkb" then if GET_ITEM_AMOUNT(11550) < 1 then LOGC("You don't have enough Black Gem Lock!") return true else SHATTER_BLACK() end return true end 
if COMMAND == PREFIX.."dp" and VALUE[2] then if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true else local D = tonumber(VALUE[2]) DEPO(D) end return true elseif COMMAND == PREFIX.."dp" and not VALUE[2] then LOGC("Please provide the deposit amount! Type : /dp <amount>") return true end 
if COMMAND == PREFIX.."wd" and VALUE[2] then if tonumber(VALUE[2]) == nil or tonumber(VALUE[2]) == 0 then LOGC("Please provide the exact number!") return true else local D = tonumber(VALUE[2]) WEDE(D) end return true elseif COMMAND == PREFIX.."dp" and not VALUE[2] then LOGC("Please provide the deposit amount! Type : /dp <amount>") return true end 
return false end)

AddHook("OnVariant", "VARIANT-COLLECT", function(V) COLLECTED_TABLE = {} if V[0] == "OnConsoleMessage" and V[1]:find("`6<(.+)") then return false end if V[0] == "OnConsoleMessage" and (V[1]:find("Collected") and (V[1]:match("Black Gem Lock") or V[1]:match("Blue Gem Lock") or V[1]:match("Diamond Lock") or V[1]:match("World Lock"))) then LOGC(V[1]) table.insert(TAKE_LOG_TABLE, {TAKE = "\nadd_label_with_icon|small|"..GetLocal().name.." "..V[1].." `oat "..os.date("%H:%M on %d/%m").."|left|"..GetItemInfo("Growmoji Tongue Block").id.."|\n", NET_ID = GetLocal().netID}) if V[1]:find("Collected  `w(%d+) Black Gem Lock") then if COLLECTED_BLACK == nil or COLLECTED_BLACK == 0 then COLLECTED_BLACK = 0 end if COLLECTED_BGL == nil or COLLECTED_BGL == 0 then COLLECTED_BGL = 0 end if COLLECTED_DL == nil or COLLECTED_DL == 0 then COLLECTED_DL = 0 end if COLLECTED_WL == nil or COLLECTED_WL == 0 then COLLECTED_WL = 0 end COLLECTED_BLACK = tonumber(V[1]:match("Collected  `w(%d+) Black Gem Lock")) table.insert(COLLECTED_TABLE, {NUM = (COLLECTED_BLACK*1000000)+(COLLECTED_BGL*10000)+(COLLECTED_DL*100)+(COLLECTED_WL)}) end if V[1]:find("Collected  `w(%d+) Blue Gem Lock") then if COLLECTED_BLACK == nil or COLLECTED_BLACK == 0 then COLLECTED_BLACK = 0 end if COLLECTED_BGL == nil or COLLECTED_BGL == 0 then COLLECTED_BGL = 0 end if COLLECTED_DL == nil or COLLECTED_DL == 0 then COLLECTED_DL = 0 end if COLLECTED_WL == nil or COLLECTED_WL == 0 then COLLECTED_WL = 0 end COLLECTED_BGL = tonumber(V[1]:match("Collected  `w(%d+) Blue Gem Lock")) table.insert(COLLECTED_TABLE, {NUM = (COLLECTED_BLACK*1000000)+(COLLECTED_BGL*10000)+(COLLECTED_DL*100)+(COLLECTED_WL)}) end if V[1]:find("Collected  `w(%d+) Diamond Lock") then if COLLECTED_BLACK == nil or COLLECTED_BLACK == 0 then COLLECTED_BLACK = 0 end if COLLECTED_BGL == nil or COLLECTED_BGL == 0 then COLLECTED_BGL = 0 end if COLLECTED_DL == nil or COLLECTED_DL == 0 then COLLECTED_DL = 0 end if COLLECTED_WL == nil or COLLECTED_WL == 0 then COLLECTED_WL = 0 end COLLECTED_DL = tonumber(V[1]:match("Collected  `w(%d+) Diamond Lock")) table.insert(COLLECTED_TABLE, {NUM = (COLLECTED_BLACK*1000000)+(COLLECTED_BGL*10000)+(COLLECTED_DL*100)+(COLLECTED_WL)}) end if V[1]:find("Collected  `w(%d+) World Lock") then if COLLECTED_BLACK == nil or COLLECTED_BLACK == 0 then COLLECTED_BLACK = 0 end if COLLECTED_BGL == nil or COLLECTED_BGL == 0 then COLLECTED_BGL = 0 end if COLLECTED_DL == nil or COLLECTED_DL == 0 then COLLECTED_DL = 0 end if COLLECTED_WL == nil or COLLECTED_WL == 0 then COLLECTED_WL = 0 end COLLECTED_WL = tonumber(V[1]:match("Collected  `w(%d+) World Lock")) table.insert(COLLECTED_TABLE, {NUM = (COLLECTED_BLACK*1000000)+(COLLECTED_BGL*10000)+(COLLECTED_DL*100)+(COLLECTED_WL)}) end  SHOW_COLLECTED = true RunThread(function() while SHOW_COLLECTED do if CDROP then break end Sleep(250) NEW_TABLE_COLLECT = {} COLLECTED_WL, COLLECTED_DL, COLLECTED_BGL, COLLECTED_BLACK = 0, 0, 0, 0 for _, D in pairs(COLLECTED_TABLE) do table.insert(NEW_TABLE_COLLECT, D.NUM) break return end if table.concat(NEW_TABLE_COLLECT) ~= nil and table.concat(NEW_TABLE_COLLECT) ~= "" then LOGT(OWNER.."`wCollected "..GET_DATA(table.concat(NEW_TABLE_COLLECT))) end COLLECTED_TABLE = {} NEW_TABLE_COLLECT = {} SHOW_COLLECTED = false end end) return true end return false end)
AddHook("OnVariant", "VARIANT-HOSTER", function(V) if V[0] == "OnConsoleMessage" and not V[1]:find("Collected  `w") then LOGC(V[1]) return true end if V[0] == "OnTalkBubble" and V[3] ~= -1 and V[2]:find("spun the wheel and got") then if V[2]:find("``6>``") then LOGB(V[1], "`0[`4FAKE`0] " .. V[2]) table.insert(SPIN_LOG_TABLE, {SPIN = "\nadd_label_with_icon_button|small|`0[`4FAKE`0] " .. V[2].."|left|758|"..V[1].."|\n", NET_ID = V[1]}) elseif V[2]:find("``!]``") then A = V[2]:find("`` spun") - 1 B = V[2]:sub(4, A) C = V[2]:find("got ") + 6 D = V[2]:find("``!") - 1 SPIN_NUMBER = V[2]:sub(C, D) if REME_MODE or QEME_MODE then LOGB(V[1], "`0[`2REAL`0] " .. V[2].." "..SHOW_GAME(SPIN_NUMBER)) table.insert(SPIN_LOG_TABLE, {SPIN = "\nadd_label_with_icon_button|small|`0[`2REAL`0] " .. V[2].." "..SHOW_GAME(SPIN_NUMBER).."|left|758|"..V[1].."|\n", NET_ID = V[1]}) else LOGB(V[1], "`0[`2REAL`0] " .. V[2]) table.insert(SPIN_LOG_TABLE, {SPIN = "\nadd_label_with_icon_button|small|`0[`2REAL`0] " .. V[2].."|left|758|"..V[1].."|\n", NET_ID = V[1]}) end else LOGB(V[1], "`0[`4FAKE`0] " .. V[2]) table.insert(SPIN_LOG_TABLE, {SPIN = "\nadd_label_with_icon_button|small|`0[`4FAKE`0] " .. V[2].."|left|758|"..V[1].."|\n", NET_ID = V[1]}) end return true end return false end) 

LOGC("Type /proxy to show commands and open the menu!") LOGT("`wProxy By `bTann18 (love)")
